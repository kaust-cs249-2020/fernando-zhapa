from lib import spacedPrint

#################################
######## PATTERN COUNT ##########

#Counts how many times a pattern occurs in a string
def patternCount(text, pattern):
    count = 0
    patternLength = len(pattern)
    for i in range (len(text) - patternLength + 1):
        if pattern == text[i:i+patternLength]:
            count+=1
    return count

# text_pc = "GCCCTGCTCTCTGCTCTCAAGGTTCACCTGCTCTGCTGCTCTCCACTGCTCTTAACCTGCTGCTCTCTTACTGCTCTCTGCTCTGCAAGGACTGCTCTCCTGCTCTTCTGCTCTCCTGCTCTCGATCTGCTCTCGCAGGATACACTGCTCTGGACTGCTCTGCTGCTCTCCTGCTCTCGCTGCTCTTTATCTGCTCTCCTGCTCTCCTGCTCTCTTATCTGCTCTAACTGCTCTGTATCTGCTCTTCCTGCTCTTCTGCTCTCTGCTCTCTGCTCTACTGCTCTAAGAAGCCTGCTCTCTGCTCTCTGCTCTAAGGGTACTGCTCTGCTGCTCTTGCTGCTCTAACCTGCTCTAGGGCTGCTCTCTGCTCTCTGCTCTCGCTGCTCTGACTGCTCTTTCCTGCTCTCTGCTCTGCTCTTGCTGCTCTCTGCTCTCTGCTCTGCTGCTCTACTGCTCTCCTGCTCTCTGCTCTGTTCTAGCTGCTCTACTGCTCTCTGCTCTACGACTCTGCTCTCCTGCTCTCTCTGCTCTACCCTGCTCTCTGCTCTCCGCTGCTCTTTGTGGAAATCTTCCTGCTCTTGCTGCTCTACATGACTACTGCTCTGCCCTGCTCTCCTGCTCTTCTGCTCTCTGCTCTGTGCCTGCTCTCTGCTCTCATACTAGACCATCTGCTCTCACTGCTCTCTTCATCTGTTTCTCCGGCCATCTCTGCTCTCTGCTCTCCTGCTCTCTCGATCTGCTCTTGTACCTGCTCTTCTCTGCTCTCTGCTCTCTGCTCTACCTGCTCTCTGCTCTTTCTGCTCTCTGCTCTAACAAGGTCTGCTCTACTGCTCTGACCTGCTCTTTAGCTGCTCTTCTGCTCTGCTGCTCTAGTTCTGCTCTCTGCTCTCTGCTCTGCTGCTCTCCCTGCTCTCTGCTCTCTGCTCTTAACTGCTCT"
# pattern_pc = "CTGCTCTCT"
# print(patternCount(text_pc, pattern_pc))

###################################
######### FREQUENT WORDS ##########

#builds a frequency table of the patterns of length k occuring in a string
def frequencyTable(text, k):
    freqTable = {}
    for i in range (len(text) - k + 1):
        currPattern = text[i:i+k]
        if currPattern in freqTable:
            freqTable[currPattern] += 1
        else:
            freqTable[currPattern] = 1
    return freqTable
#print(frequencyTable("ACGTTTCACGTTTTACGG", 3))

#finds the maxValue in a dictionary representing a frequency table
def maxMap(dictionary):
    maximum = float('-inf')
    for value in dictionary.values():
        if value > maximum:
            maximum = value
    return maximum
# print(maxMap(frequencyTable("ACGTTTCACGTTTTACGG", 3)))

#finds the most occuring patterns of length k in a string
def frequentWords(text, k):
    freqTable = frequencyTable(text, k)
    maximum = maxMap(freqTable)
    patterns = []
    for pattern, frequency in freqTable.items():
        if freqTable[pattern] == maximum:
            patterns.append(pattern)
    return patterns

# text_fw = "TCTGGCCAATTATAACGGTCTGGCCAACGTCTGGGTTCTGGCCAACTAACATCGTCTGGGTTCTGGCCAATCTGGCCAATCTGGCCAACTAACATTCTGGCCAATCTGGCCAACTAACATTTATAACGGAACCAGGCTTATAACGGCTAACATTCTGGCCAAAACCAGGCAACCAGGCTTATAACGGCTAACATCGTCTGGGTCTAACATCGTCTGGGTTTATAACGGTTATAACGGAACCAGGCCTAACATTTATAACGGTTATAACGGCGTCTGGGTTTATAACGGCGTCTGGGTTCTGGCCAACTAACATTTATAACGGTTATAACGGAACCAGGCCGTCTGGGTTTATAACGGTTATAACGGTCTGGCCAACGTCTGGGTTTATAACGGAACCAGGCCTAACATAACCAGGCAACCAGGCTCTGGCCAACTAACATTTATAACGGCGTCTGGGTTTATAACGGCGTCTGGGTTCTGGCCAATTATAACGGTTATAACGGAACCAGGCAACCAGGCCTAACATTTATAACGGAACCAGGCTTATAACGGTCTGGCCAATTATAACGGCTAACATTTATAACGGCGTCTGGGTCTAACATCGTCTGGGTCTAACATCTAACATTTATAACGGCGTCTGGGTCTAACATTTATAACGGTCTGGCCAATCTGGCCAATTATAACGGTTATAACGGAACCAGGCAACCAGGCTTATAACGGTTATAACGGTTATAACGGAACCAGGCCGTCTGGGTTTATAACGGTTATAACGGTCTGGCCAATTATAACGGCTAACATCGTCTGGGTAACCAGGCCTAACATCGTCTGGGTCGTCTGGGTTCTGGCCAACGTCTGGGTCGTCTGGGTCGTCTGGGT"
# spacedPrint(frequentWords(text_fw, 13))

#########################################
############ REVERSE COMPLEMENT #########

#given an ADN strand, returns its reverse complement
def reverseComplement(string):
    complements = {'A':'T', 'G':'C', 'C':'G', 'T':'A'}
    revComplem = ""
    for char in string:
        revComplem = complements[char] + revComplem
    return revComplem

# text_rc = "CACAGCTAAGAGATAGCTGTTGCCACCCCTATCACGGCTTGTTTCTCGTGTTGCGGGCCACGTTATGTCGCTTCTTGTAAAGGCCGCTGTAGACGGGAACCAAATCTAAATGTACGGTTACGCTACGAGACTCAAAATCCTGCCTGGCAGAATCGTGCCCGTCAATCTTTGTCGAAATTTGTTTAATACTCGACCGAACCAGGAGAGTCAACTATCAGGGGGAGTAGGACCGCACCTGACATCTCTATGAAGATGGAACGCAAGTTTGGAGATCCTCCGGTAACGATAGGTACTTGCAACACATGTTCTGGGGAATAGTCGCAAGTGGCTTTGGAATAAGAGCTGTTCCGGTCCTTACCTCGCGGCATCCGAATCCTGACCCACGAACTCGGTTATATCTCTCTTGCGCCATGTTGAAGAGGAACATTTCCTTTGGGACAAGCAAGAATTTATCAGCTTTAGTATAGAAATTGCTTATAATCCACAGGCACTTTCATTTCTGTAATTTAGGGATAGTTCTGAGGCTGGTAGTTGAGCGTGAGGACTTGCTTCGGACGACAGCGCTAGGGGAAAATGTGCGCTAGTTTTTCTGCCATTGGATCCTATCTTAGCGTATGCGCCCATAGTCATATCAGCACACGAAGCTGTTACTCGTGACGTCATTGCTGCAACAAGATTGGCGCAAAGATGCTAACGAGATCGCGAGTCGAGATTAGAGTGTGTTGGCTCAGCGCCAGCTTCCTTGTATTGCATAAGCTTCGAAGCTCTAATTACAGCTAGGCTGGGCGTGCCAATGACTTACCGTACAGCTGACCAAATTGATCGGTTATCCGGATAGTCTAGAAGCAGCAGTCACTGACGCAATTATGGATATAGTCGACGACGCCGAACTTTTTAGCTACCGTGCCTGCCTTCAGCCAAATATCCACTCTAATTTTGGTGGCCAGTCCGTCTCAGCACCCCCGGTTCGAAGTAGTAAGGCCAATACGCCGACGTTGTGTTCAAGCACACTGTTTTGAAGCCGAGCTGGGAATTTTGATGGATAACTTGAGGATTCCGCAATTGGATTCGTTACCTCTATCTTATTACGCTGCAACAACTAGGGACGTAGCTTAGAATAGATGGAGATAATCTAACCTGACGAAAGAGCCTTACTAATTATCGGCTTCTGCGCTGTCGAAATTCTGGTGTCCGAGCTGGGTAGGGTCGCGCTGAGACCACTACATGTACCTAATCACGGCTCACAGTATCAAGGAGAGCCGATGGTTGTAGTAAATGCTATGCAATAAAAGCCGTCAGATCATCCTAGATTTGAGCCCCGCCAGTCCCATAATCACTGAGGCACCTTACATTGAAGCGAAGTTCTTCGCGAACTTGGAGCAGCGTACCAAGTGATCTTAAAGCAGAAAAGCGGTAAATTCAATGGAGGTGAACTGTATGCTGCTGCGGCTACGATAGGCCCTATTGCTTAGGAAAAAATTCCAAACCGAAAAGCAGAACGGAAGACCATACGAAGGCCATCTAGCACCCTAACTAATATCGCAATCTTGCGCACCTACTGCCTGGTCATAAACTCCAACCCAGCGAATACCGACAGAATTGACTGTGTGAACTTGCTAATCAGGTATCGCTACGTTTTCATCGAGCCTCTCGGGGCTTTTTCCGATGCCAGGGCTTTCCGTGTCAGCAACGAGGGTTTGGAGTATAAAGTCCTGGGAAATATGACCTATACCTCCGAACGGCGTCCGTCGGAGACGGCTTCGGCAGGAGGCAGCAACCCCCATCGCCGTACGCGTAAGCAGGTACACTCGGCAGATCAACTTCCTACTTCCTACGAGTGGGTATGTTATGGCTTGCCAGATTATCATCGTGGTCCGTATTTTTAAAGCCTCGTAGCTAATTGCAGAACACCTCGGCCAACCAACGAGAAGACCCTGCAACCTTCATTCATGTTCGATCCCTTGATTTCTGCGCCGATGGTTAATTCGTAGCCTACAGCCATGCGTGTACCGACGTGATTAATGCTGGGCTTACTATTTTCGGGTGCCTCGTCATACACTGTATCCCTGAACCGCGGCATGTGAATGCAAGTGGATGGATGTAGAGGCCCCGTCTTGCGGTCCTGAAATGCGAACTGTCCCCCACTTGCTAGTCCTATGAATACACCGTCGTCAACGGCAACAGCTCTTCTTGAACGCAACTTATTTCCCGGGTCTTCTAAGGCAGGGGGAGCTGTGCTGTGGCGGAGTAACCTGGTGGACCAAGGTGTCGTGGGAAAACGCTAGTTTTCCTGTTAATCCTGAAACCGTTATTCTTTCGTGCGCCGTTTCAAATAGTCGTAAAGCTAAGTTATCCTTTTGCATTGTTCCTATCGTGTTCTGAAAACCGTCGCTTTTGCTCGCGGGTGGTTCATATTCATACGTTAGCGTTCCATTGGTTCCGCAATTAATTCTGTTTGTCCCCGTGTCTGCACCCGTTGCGCGTTGGGCGATCATGGGGATTCATATAATCCAAATTTAATGTTTGTGGCAGGACAGCTCTTGATTATCGATGGGGAGGCCGAGAACGCTTGATCCCGACTAAATGATGGCTGCATCTTAAGAGGGGAATGGCCGTCGTCGACGACCCGTATGCAGGGAGATTAACTTAATGACTCGCTCCCCCGGCTGAGCAACCCATCGTGGACCCCCAGCGTATTATTGTGCAAAAAACGTGTCTAAATAGCGGGAAGTCAGGGCCGCATTTGAGCACCGGTCGATTCAGGGATTATAGCCTGTTTCTATGCTGCTTCAACTAAAATCTAGCGTTGACATCAAAACCGCCAAGGCTTTCAGTCCGCCGGACGCTACCAGATCGAGTCTGGAAGTACCATGCGGAGTACATAGCATGTAAACCTACCATAGCGAAAACCACCGGACTACTAGGTTGCGTCCTAGGCTATGTTGTGAGTCCTCAGTGCTGCAGTACTGTGATCCATGCGAAACAAATTATTGAGCATCTTAGCGGCCATGAACTGCTCAGACTTGTATGTCCCCGGCACGAAGGCTATCAGAGAGTGAAAGTTGATAACGGTACATGCTGATTAATTTCAGGCTCTAAGGAAATACGCTTATGAAAGATTTTATATTCCTGCGCAAGATTTGACTGGAGACAAAACTCGGTATGTACGGCCTGGGGTTTTCCACTGGCTGCTGTGCTGGATACATGTCGTTTTGGGTCATCGAATTGCAGCCAAAAGACGTGGCGAGCCTTATTACTAATGGACGGATCCAAGGAGACTCAAATCGCTGTATCGTGGATCGTTGGCGCCAAGCGCCCTAGGGTTTGTACTCCAGATATAAGTTAACTTTCGTCTCCCGACCAGAAACCTCGCCTTGATGCAAAGTAGACCGGTATAGGTTGTGCCATCACTTACGGAGCCAAACCCAACCTATTACGTTGCATAAGAGCTATGAAGGGCATTCGCGCTTGCAAGGTATTTTCATCCTTTGTTGGGTTCCGCACAGCAAGGCGCTTGAACTGCTTTCCGGACGTGCATCCCCTCGCCCAAGACGAGCGTGATTCACCATCTTACAGGTAACAGGCTGACCGTCTTGGTCAGATGGTGGCGGTACCCCAATCTACTGGTCGAACGTGACTGTCTGAATGCCCCCATTCTCGAAGGTCGGACCGTATGATCCTTTTCCTGAGATCAGTAGGTGTATTGCTAGTATTTTAGATTTGCATTTCCGCTCTATTGACCGAGGTCCCGCTAGGGGATTTAACTCATTCCCAGCAGCACCTCTAACAGCCTCGGAGTTAGAGCGACTTGCCGGCCGCAGAATAGAAGTATTCGACGCCTCTGCCAATCTAGCACCATATGTGGTAGCCCTCTCGTTTCCGGCGCTAGATAGTCACCTGGGCGTTCCTAGCGTCATCCATGCTGTCGAGGGCTTCTTTGAGGCTCCGCGTCGCTGTGACGGCTTTAGTGCTCATTGGCGCCAGCTTCTGGTGATCGTTACCAACGTGTAGCACCAAACTTTTTGCGTATTCACTGTTATAAGAAATATTCGGTTCCATGTCTGCTGGAGTGTTCGCTCATGTCGATTCGGAAGCTCTCGAGCAATTCATGCGGTCGCCCCAGCTATGATACTGTGAAGCCTACCGCTAAGGTCGTCTGTGTCGACAGAACCACAACCGACCCCCTGGTAATGGTAAAACATTACTCGCAGTAAATGGTCATATGTTCCTCATTACACGGCCCTCGCTACGTTGTTGCAGTAGTTAACACGCTCAAACTCTTATCTCCTCGGAAGGCAACGCCCGCGACTGACAACCCAGCTTTATCACTTCCCGTCCGGGTCAGAGGCGGATGTCTAAGTAAACATAGTATACCGGTTTTGCTGCCTAACGGCTAAGGTATGTCCCCTTTTCAAGAGTGCTACTATTATCGCATATGGGCCTGGATCTGGAGTCTCGCTATATCCGTCAGAGAGACAAGGTCCTGTTCGCCTTACGCTCATGCTGGAAGGGTCGCATTTACCATCGCTCCAGCACCTTCAGATATATTAACAGGAGATTATCCTACGAGATTTAGTAGCGTAATTTCTCACCTCAGAAGCAACGACCGGATTGAATAAGATGCATTCCCGATATTTTGCAGACTACCAGCTACCGCAGGACACGCGTCGATGCGAGCGGAAAAATTGTGCAGCCTGGATTGCGTCGCGCAGCCCACACCACCCATCACAGACTTCGGGATCGCGTGTATCGGACATTCACGTTCATTCGGCGGGATAACGATCTAGCGTCAAACGGGTTCGACTGTGCGGAGACTATGCTGATTGCTTAAACAGCCTCTGTACAGCTTCTTCTCCCATGTCTATCGAACCTGAGCTGGGCCAAATCTGTCAGCAGCACTAGTCCAAGGCAGAATTGTAACGGTCGCAGCGTTGGGACTATTCATTTTTCTTTAAGGCTAAATGCTGAATGCGACTACAGATACCCTAAGGTACCATGTTAAGTCCTAGACGCTATTTCAGTCGTTCTATATCATCTCGCAAATAATCACAACAGAGGTGTAACCTGAAAGCCTGTCCCGGTACACCTAGTACCCACCTTTTTAGCTATCGGTATTTCCTTCGTAGGTTGAAAATGCAAGAAGGAGGATCGTTTCGATGTACACCTAAATACTTACGTGAAGGAGGGGCGTATTTGTGCCCCTATCGAAGTAAACGAAAATCCAAAGGATCGAGACGCCTGGTCAGGATTTTGACTAGAGGTACCGGCGTCAGAAGATGGCGGTGATGGTTGCGTCCGATGATGTGAAAATTAACTTACTCAGACTCTCCAGATTCATGATATGCATATTGCGTAATCTGTTGTCGCCATTCATTAAAGGTTTATTACTCTCGTGAATTAAACCGCTAATATGCGAGATTATCGAATCAGCTATTGATCAAGGCATTCGGAATCCGCAAATACAGTCACCCGGAAGGTAACTCTTTCAGTTCCTCTGGCAACCGGTCCGACTCACGTGGGGGAGAAAAGAGCTTATAGCTATTTGTCTAATCTTATTTGTCCTCCCCCTTCCGACGGGATAAGTCTCAATTTTACCATGGCAATATAGCTGTCGCAACACGAACAGCGAAATTCGAGTCGACGTACACATCGTCTCTCCATGGGCTTACGTGTCAGGTCGGCCAGAAAACGATGGTATGATTGAGTAGAAGGGCCCCATAATCTTCAGACCGCCGCTGCAGCGTTAATTTGCGTAGGTTATGCCTGTGGTCGCCAGACGGGTGTATTTAGGATTAGAGTCGCATAAACCTGGTCATAGAGGCTAGTAGCAGAGAAACTAGGTGCGCCCTAGGGCACTAGAATAGCTTGGGGCGGGGCCTCTCAGCTAGTTGACAGTGGTAAGAGTACTGGGGTTAATTTCGTTCTTGTTGCCAGGGTGGGTTAAGCATTGAGCTTCCAAGCCTCTTTCACTATGGCTTAGAATAGGTCTGTATGTGAGAGTTAAGTATTTAACTATCCCAGGGAATCGAAAAACGGGGCCGGCTCAGTTATTTCCAAATCACATACCATCAGCTTAAGCTACGAACCGCTAATACTATCTCAATCCTATGGTCCAAAAATTTAGTGGAGTCCCTACTCTCCGTGGCGGTTTACCTAAAATGAACCAAAAGCTGTGAGGCGTCTCTGATGGAGGGACTGTTCTATATCGGGCGTATGCTTCGTTGGGCGGGCCGATAAGTCAGCTATGTATGAACGAGATACCGTGAGAGCTACCAAAGGTGCTACATTACCAGGTCAGATGCGCGGCTACGCACTACGCTAAGTTTAACAGAGATATGCGGACCACATTCAGAAAAGCTGAACACGCGTGATGAACCCACTTTCCGCTCGCGCAGTGCGGGAGGGTTAGGGCGGGCATTACAATGGGGCCCAAATTAAACCGCGTCATTCTGGGACTGTGGGGGTAATGCTAACGCTGGCTACAGGAGGCCCCGATAAAGTGTGGTTCAGTGGATCCGCCGACCATCCTATAAGGGCCGTGGTAATCCCGCCGTATTCTTCATGTCGTGTTCCACCGGCAGTGTTAATTAGGGCTACCGCCTAGAAATGCTATGAAGCAAAATTCGGCGTATAATAGACTGGAGATCACCATCCTCTAGAGTAGAGGGAACCATAGATACTGACGGCTGCGGTCTTGTACTAGGTCTGCCTTGCAAGGGCTCCTCGAGGCTAATACTCCGAGGCGCTGTCCGTAGTGGATAGCAGTGTGACAGCCCGGGAGCTATATATTCTTCGCTGCCGGAGACCGGACCCTAGCTCTGCCGGAACAGGAGACTTCCGAACCCTTTAGTAGGAAATTCCTAGTTGTTCACGCTGAAATATCGTCACCTGTGTATCCTAGAAGTAGCAATCGCCGGTGCCACGATTTTTCCTAAGGCGGCGTCTCTCTAGTCCAATGTGATAAGGCGACCACGTTTATGTACCTTAGAGACAAAAGTAACGTATTCAAAAAGTGGAAGGTAGGGAGATTTAGGGGTAGTATCGCCTTTCTGGCGATCACATCTTGTAAGGCGCCTCCAGGATGATCATGGAGATTTAAGACTCGAAGAACCCAACCTTAACACATAAATTCGAATTTAGGGAGTCCACTGTGGAGCTGCTGTCCACCCCGCGCGCCCTGCTCATGTGGTGACTGAATTTTGGGTGTATCATATGTTCTAAGGTAGTCAGTAGATTGACACGTTCCACCAACGTATTAAACTCTGAACAGGCGAGAGGTCCTTCTATCGGGACGGGTATATAATTCCCATTTTCGAACTCATCAGCCAGTACCTCACGGCTACAGGGCCTACCTGATATTTAACCTGATGAGCTTGAATGTGACCCCCATCAGCCAGAACTCATGGCGCAACGCCGCTGTTTGGATAACAAGTGGCTCATTCGGGGTAAAGCGAGATCGAAACGGGGCTGTACTCGCAGGTTTGACGGAACTATTATTTAGGGTCCGGTCACACGCTCCCTGACGGAAGAATGCGTTTGATCTCGAGGCGATGAAAAGCCACATCAAAAGCCCCAATTGAGAGAATTGGAATATAACGTAAATGTAGGGCCTTGCCCTGGTTGCACAAGTAACTAGTAACGCTAGGTATGACCCGCAGCCACCGGTGCAAGTGTCAGTCTGGTCATTATACTTATGTCGCTTTACTTTAAGGTTAATGGGGGGCGGCGGTCTTCCCAGCAAAGAAGAATTTCGGTGCTAGTTGCCCCCGTTTGGGGTCCTACAACGTGGATCAGTGGGGCGCCAGGACCGTTGACGGGTACGGGAAAGCGGCCAGTGACTCGAGCGGTTCTTTGCGAGGACCTTTATAAAGCACACTGGTGTAAGGGGCTTTAATATTCTATACCTCATGAATTCGCGTCAGTTCTTCTCCAGCAGGAGATATTGGAACAGCTATATTTACCGATCGCGAGACTGAAGGAAGCGTCTAGCAAGTAAGCTACGCTACCTGTGGGGCCCTCCAAGGACGTGGGGGTTAGCCGCGGTGATTAGCGGCCGTCAATTTCAGGAGGGGGGGAGATAATACGCGATAGGAAACAGCTTGGGGAAACATTCAACAATCGAATGGATTATAGCGATCGAAGATATGTACCTCATAGCACAACGATCAAAATAAGTGAGGAGTCGCACTGTATACAATATGAGAGCACTGCCCGGTCCAGTAGTTCGAACAAGGGGCAAGCGCCCAGTGCTAACTACCTTCACACCTCTCATACCCAGGCGCAGGCCACCTCTGGGTGGGAGTGAACGTCGCGCTGAGTCTCACATGTTAATATACCTTGCACACGGGTAATCTGCCTTTTTAGCCATTCTGCCGAGCCGATCGGCGTTCGCCACTGTCACGTGCCTTCCCTAATTTGCTTATTATTCTGTCCGATCCCAATTGCAGCTTCTAGTCATTGTTACTAAACACAATGGAAGGCTATTGCCAAAGGGTCTACAATGGGGGTGTAAGGAGTAACAAGGATTGGTAACAGCTATTTGGGCCGGGAAGTAACACCATTCCAAAGGATTAGCTGTATCACGTGCCCCCGAAAGGAGAGCACTTCCGGCCTGCCATGAGGATCCCCGGCGTCCGCGGCATGCCTGCAGTGTCTTTCGTGAAAGTTATAGGCGGGGGTAACCGCCTTGAGACCCGTAGTTCGGCTTAATGAATAGCTGCGCGCTGCCTCTCGGGATGCTTGTAGCCGGGATAAAGTTACTTATTCGATGACTGTCACCTTTTAAGAACGAATCCATTAACCTCCATAAAAGACCGATCATGGATAATAACGAACTACTTAATGCCTACCACAAATGCTATATCAGCATCTGATTACCGCTGGTCATCTGAACTGGGGGACGACCGGTACCAAGTTCTGGGCCAGCCACAGGGGGCTCAACGGGACAGAAGCTAGCTTGTACAGGAGGAGTTAGACGCCACTTTCTTAATGCGAACGGTTCGTGTAGTGCGTTACACCAAACAGTGACAATTATGGGGTGTTGCGCTCGTGCAGGAAGTGAATTCCTTTGCTTAATTCTGGGACCAAGGCTCCGCAGACCTTAACTTTTTAGTCCTGTACGAGGCTCATTAGTACCGTGCTTGGTGGCTATTGAGACCGACTTAACAGATTAGTCTAGATTTTTGCCCGCCTTGCATGTGTCACTTCGCATCTCGTGTTAACGGATTGTGCCAACTCTGAGTGGCATCCAATAGTGTCATAAGGAGGCGTACGCGGTGATGGTTCGCTTTAGCAGCGCATAACTCCTGATTTCGTCCCCTAACCATCCGCGAACGCCGCCAGTGTCCTTATTCACAACAGGATTATCCCGCTTTGAACCGATCGGTCAGGTTATGGCGGCCTGTCATCTGCATATGTGTGTGAAAGGACCGCGGCAACTAAGGCCGTATTTGTGGATTAATGACATCCAGTGCTGCAGTATCCCGCACACCTACAATCTTCCTGACTTGAGCCGTCACCGGCAAAACCCACTATTGAACTAGCAACGCGTTCCTTGGGCCAGATTAGTTTATGGCGCCTACTCCTCAGCGCCCCTTTGAGCCCATAAATGCGTTCCTCGGTTTTCCGTATGGACATAGTGCTAACTCGAGGATAGTTAGTCAGGATGAAACTTAGAAAAGGTGTCCCCAATGCTTGTAAGCAGCGGGCTGTGACTTGTTACTGTCATTATACAAGCAGGAGGTTCGTTGTTCATGCTAGAGAGAGACCCCTTAGAGCACGCGTCGAGGTCCGTCTATATCTTTACCGCTTGGTCCCCGAAACAGGGGTACATGTTTTAAGCAGCTTCGACGAACCATTCTACCACAACACCAGCTCAATAAACTGTCACGCATCCTTAAGAGGGACGTCGACAGCCGTAGTCCCGCACTGACCAATTCTCCGTTCCCACCTAAAGTCATGAAGCTCGTTCTAACCAGCGTTTTGCTTGGACGATGCT"
# print(reverseComplement(text_rc))


###############################
######## PATTERN MATCHING #####

#finds all the occurrences of a pattern in a text and returns the start indices of those occurrences
def findOccurrences(pattern, text):
    patternLength = len(pattern)
    positions = []
    for i in range(len(text) - patternLength +1):
        if pattern == text[i: i + patternLength]:
            positions.append(i)
    return positions

# pattern_pm = "TGTTCATTG"
# text_pm = "TATGTTCATATGTGTTCATGTTCTTACACTAATGCAGTGTTCATTGTTCATGCCTTGTTCATTGTTCATTGTTCATGTTGTTCATCTGTTCATCACTGTTCATTCTTGTTCATATCTTTGGTGTTCATACTGGCCGTGTTCATGCAGCTCCGCTGTGTTCATATGTTCATGCAGTGTTCATTGTTCATATGTTCATATGTTCATTTGTTCATGGGACGATTTGTTCATTAGATTGTGTGTTCATTGTTCATAATGTTCATAATGTTCATCCGATGTTCATATGTTCATCTGTTCATCGTGTTCATACTGAAAAACTTGTTCATACAGTGTTCATTCTGTTCATCAAACAAGATGGTTTGTTCATTGTTCATACGAGGCTGTTCATCTCTGTTCATTTGTTCATTAGGTGTTCATTGCTGTTCATATGTTCATTGTTCATGTGTTCATAAGTGTTCATCGTTTCGTTTACGGGATCTGTTCATTTGTGTTCATATTGTTCATGATTTCTGGTTGAATGTTCATTGTTCATCTCGTGTACCTGTTCATATGTTCATCCGTGTTCATGTGTTCATTGTTCATGCCTGTTCATCGTGTTCATGTGTGTTCATTATAATGTTCATATGAATGTTCATAAATGACTTGTTCATCGTGTTCATCTGTGTTCATTTCGCTGTTCATACTGTTCATAAGCGTAATGTTCATTCTGTTCATTGTTCATTGTTCATGCTACCTTGTTCATATCACGTGTTCATCCGTGTTCATTGTTCATTCTCATTGTTCATTTTATGTGTTCATTGTTCATGCTTGATGTTCATTTGTTCATTCTGTTCATGTGTTCATTGTTCATTTACGTGTTCATTTGTTCATCGCCTGTTCATTGTTCATAGATGTTCATTTGTTCATCCGTGTTCATTACGGTGTTCATAGGACTGTTCATCTATGTTCATATGTTCATTGTTCATGTGTTCATTAAGGTGTTCATGACCTTGTTCATCCTTGTTCATCTTACTGTTCATCAAGTGTTCATATGTTCATTAACTGATGTTCATTGCTGTTCATCGTTGTTCATTGTTCATTCTGTTCATGGTGTTCATACCATGTTCATCGGCGGTTGTTCATGTCTGTTCATGATTCTGTTCATTTGTTCATTGTTCATGCTGTTCATAGTGTTCATTGTTCATTTGTTCATATTGTTCATGATTTGTTGTTCATGATTGTTCATTTACAATGTTCATTGTTCATAGTGTTCATTTGTTCATATGTTCATATGTTCATTCTTGTTCATTGTTCATTAGCCATTGTTCATTGTTCATTGTTCATATGATGTTCATTGTTCATTGTTCATTTTGTTCATTGTTCATTTGTTCATACCTGTTCATGACCTGTCCTTTGTTCATCCTGTTCATGTAGGTGTTCATGGGTGTTCATCTTGTTCATAATGTTCATTCAGTGTTCATAGCTATTGTTCATATTTGTTCATTTTGTTCATACTGTTCATTTGTTCATTGTTCATATGTTCATTGTTCATGGTCGCTTCCGGTTTAAGATGTTCATGTACAATTGTTCATACATGTTCATTTGTTCATTGTTCATTTGTTCATTAAGTGTGTTCATCTGTTCATTGTTCATACTATGTTCATTGTTCATTGTTCATCTACGATGTTCATTTTATGTTCATGATGTTCATTGTTCATGCTCCATCGTTTTGTTCATCTGTTCATGTGTTCATCGGCTGTTCATCTGTTCATAAAGCTTGTTCATTTGTTCATTGTTCATTTTATTTGTTCATGCTGTTCATAGTGTTCATTGTTCATCCCTGTTCATCCAATGTGTTCATGTGTTCATGCCGATGTGGTGTTCATGTGTTCATCAGTGGATGTTCATTCCTGTTCATCTGTTCATCCCGGTGTTCATACTGTTCATGAGTGTTCATGCACAACGTAAGCCTATGTTCATATTGTTCATTGCACGTACTCTGTTCATTTGTTCATATGTGTTCATATTGTTCATTGTTCATGTCGTTGTTCATCTGTTCATAACAGTGTTCATTGTTCATTGTTCATTGTTCATAGCTGTTCATTGTTCATATTGTTCATGATGTTCATTGTTCATATGTTCATCGTGTTCATCTGTTCATCACGTTAGGGTGTGTTCATTGTTCATGCCTGTTCATTGTTCATTATTGTGTTCATCAATGTATGTTCATTGTTCATCCATTCTGTTCATGGTGTTCATTGTTCATCCTTTAGATGTATGTTCATCACTGTTCATCATGTTCATGTGTTCATTTTGTTCATCTGTTGTTCATATGTTCATGCCTGTTCATATGTTCATCTGTTCATTGTTCATGCACCTGGTGTTCATTGTTCATTACTCCTGTTCATGCTGTTCATTCTGTTCATAGTGTGTTCATTGTTCATCTGTTCATCTGCTGTTCATATGTTCATTTGTTCATAACTGTTCATTTGTTCATCAGACTGTTCATAGTGTTCATCTGTTCATTGTTCATACTTGTTCATGTTGTTCATCACAGGTGTTCATTGTTCATTGTTCATCACGATAATGCTTATATTGATGTTCATACCTATTATGTTCATTGATGTTCATCCATGTGTTCATCAAGGGTTCTGTTCATTGTCATGTTCATAGCCAGTGTTTGTTCATTATGTTCATGGTGTTCATAAACGGAGTGTTCATGTAACATGTTCATTGTTCATTATGTGTTCATTGTTCATCCCCATTGTTCATCGTGTTCATGTTCCCCTATGTTCATTAGTGGTAGTCTGTTCATTTGTTCATCTGTTCATTGTTCATATGTTCATTGTTCATCTAGTGTTCATTGTTCATAATGTTCATACTGCCTGTTCATAAATGTTCATAAGACATAGCTGTTCATTGTTCATTGTTCATATCCTGTTCATGTGTTCATTCATTGTTCATATGCAATGTTCATGGATGTTCATCAAGTGTTCATATGTTCATAAATGTTCATGTGTTCATTTCTGTTCATTGTTCATTCAATACGCAGGTATGTGTTCATAATGTTCATATGTTCATACGATTGTTCATACCTGTTCATAGTGTTCATTGTCCTGTTCATACTATGTTCATTTTGTTCATTGTTCATGAAGTGCATTACTGATGTTCATTGTTCATGCTGTGTTCATTGTTCATGTTGTTCATTCTGTTCATGAGCTGAACTGTTCATGTGTTCATCCCTGTTCATGCTATGTTCATTGGGATGTTCATATGTTCATATTGTCAGCGATGTTCATCGTCATGTTCATATGTTCATATGTTCATCACGATGTTCATAGTGTTCATTGTTCATTGTTCATCGTGCTGTTCATACGTGTTCATTGTTCATGCCTGTTCATTGTTCATTGTTCATCTGTTCATGTTGTTCATTTGCCGTGTTCATATGTTCATGTTAGTTGTTCATGGTGTTCATTGTTCATTGTTCATTGTTCATTGTTCATTCCGTACACTGTTCATATGTTCATTGTTCATAGTCTTTGTTCATGCACGATGTTCATTGTTCATTGTTCATATGTTCATGAATGTTCATCCTGCGTAGATATGTTCATATGTTCATGTGTTCATTGTTCATTACTTGTTCATAATGTTCATTGGTTGTTCATCCAGTGTTCATCTGTTCATCTAATGTTCATTGTTCATTGTTCATAGTGTTCATGGCGTGTTCATTGTTCATGGATCGTGTTCATCGTGTTCATTTAGTTTTGTACATAGTGCTGTTCATTGTTCATGGGATTGTGTTCATATATGTTCATTGTTCATTGTTCATTGTTCATAATGTTCATTATCCTCTTGTTCATTGGAACCATGTTCATAGCACAGTGTTCATATGTTCATTTGTTCATCCCTGTTCATACGTCACTGTTCATTGAATGTTCATGGCTGTTCATGATATGTTCATGCCGATGTTCATGGGAACTGTTCATTATGTTCATCTGTAGCGTGCGAGTTGTTCATGTGCAAATGTTCATCACGATGGCCGGAGGTGTTCATCTGTGTTCATTGTTCATTGTTCATTGTTCATGATGTTCATATGTTCATCTATGTTCATCGGTCTGTTCATGGGTGTTCATGAAATTGTTCATGATGTTCATTGTTCATTGCTCTGTTCATTTGTTCATCTGTTCATGCTGTTGTTCATTCAGGCATGGTTGTTCATGATCCCCGTGTTCATGTGTTCATGTGTTCATCTTGTGTTCATTGTTCATGTGTTCATTGTTCATATGGTATACGCAAATGTTCATTGTTCATTCATGTTCATGTGTTCATCAAGCTCTGTTCATAGCTGTTCATGGTGTTCATAAGTGTTCATAGGTGTTCATCATGTTCATTGTTCATGTTAGTGTTCATGTCTGTTCATACCTGTTCATGTTGTTCATTGTTCATCCTGTTCATGTTGTTCATCTTGTTCATCGTTGTTCATCTTGTTCATACTGTTCATTGTTCATATTGTTCATATAGTCGTTTGTTCATCATGTTCATGGTTGTTCATTGTTCATGCATGTTGTTCATACAAGACCTAAACTGTTCATTTTGTTCATGTGTTCATCTTTGTTCATGTGTTCATCGGTGTTCATGTTGTTCATTGAGGTGTTCATACACGGTGTTCATATCTGTTCATTGTTCATATGTTCATTGTTCATTCGTGTTCATGTGTTCATAAAATGTTCATTTATGTTCATATGTTCATTTGTGTTCATGGTATTGTTCATATGTTCATGTGTTCATTGCGTGTTCATTGGTTTGTTCATTGGAGAAATGTTCATCTGTTCATATGTTCATTGTTCATTGTTCATTCGTGTTCATCCTTGTTCATCTTGTTCATGTTGTAGGATGTTCATTGTTCATTGTTCATAACTGTTCATAAATTGTTCATTGCTGTTCATGTTTGTTCATTGTTCATTTGTTCATGTGTTCATCATGTTCATAAGAGTGTTATATGTTCATTGTTCATTCTGTTCATTGTTCATGTTGTTCATGCTGTTCATCTGTTCATTGTTCATTGTGTTCATGTGTTCATAGTCTGTTCATCTGATGTTCATGATCAGCTTTGTTCATCATGCTAGTGTTCATTGTTCATAATGTTCATTATGTTGTTCATGCTGTTCATTGTTCATTGTTCATCATTATGTTCATAATGTTCATCATGTTCATATGTTCATACGTGTTCATGGTTGTTCATTTGTTCATAACTGTTCATTGTTCATGTGTTCATGATGTTCATTGTCGTGTCCCTGGTTGTTCATTGTTCATCGTTAATATGTTGTTCATATGTCGAGAGATGTTCATGCGGCGCTGTTCATTTGTTCATTGTTCATTCCTATGTTCATTGTTCATATGTTCATCTGTTCATATGTTCATGTGTTCATCACCTGTTCATTGTTCATTGTTCATTGTTCATATGAATGTTTGTTCATAGTATGTTCATAGGTGAATGATGTTCATATTGTTCATCTGTTCATTGTTCATGTGTTCATGGTGTTCATTGTTCATAGTGTTCATCGTGTTCATGGTGTTCATTTGTTCATAGTCCGTGTTCATTGTTCATCCTGTTCATGATGTTCATTATTTTATATGTTCATTTGTTCATTTAGTGTTCATTGTTCATAGTTGTTCATTGTTCATTGCGCTTGTTCATCACGTGTTCATGCTGTTCATAGGGCCTTTTATACTCGCTGTTCATGTCCCACTGTTCATGCCTGTTCATGCGTTGTTCATCGAGTGTTCATGAAGTGTTCATTGTTCATGTTGTTCATTATGTTCATTGTTCATGTTGTTCATATGTTCATGCAACTGTTCATGCACGTGTTCATTGTTCATCTGTTCATCTGTTCATTGTTCATGTGTTCATTGTTCATGTTGTTCATTTGTTCATTTGTTCATTTGTTCATATGTTCATCAGGGCCATGTTCATATGTTCATGTGTTCATGCCCTGTTCATTGTTCATGTGTTCATTGTTCATCTTGTTCATTGTTCATTGTTCATTCTGGTGTTCATGATGTTCATTAGTGTTCATTGTTCATGTGCAGGAATTGTTCATGTACCTGTTCATTCTGTTCATTATGTTCATGAGTCTCGTCTGGCCTCAAAACTTGTTCATATGTTCATTAAGTGTTCATATGTTCATTTATGTTCATTCGTTTGTTCATTGTTCATCGTGTTCATGGTATTGTTCATGGTTGTTCATTGTTCATATTGTTCATTTGTTCATCTCACCCACGCTGTTCATGCCTGTTCATGCATGTTCATATGTTCATCATGTCTGTTCATATGTTCATTGTGTTCATTGTTCATACTGTTCATTTGTTCATCTTGTTCATGCCCATTACGGGTGTTCATGCTCGTGTTCATTACTATGTTCATATGCGTGTTCATTGTTCATTGTTCATGGGATGTTCATTACTGTTCATTGTTCATTGTTCATAGCGAGTGTTCATGGGATGTTCATCTTGTTCATTGTTCATCACTGTTCATTTGTTCATGCCTGTTCATTCCTGTTCATGTGTTCATTGTTCATTCCTACAAAATCATACGCGATGATGTTCATGGTGTTCATAGTGTTCATACTGTTCATTCTTGTTCATCTGTTCATTGTTCATTGTTCATAGTGTTCATTGTTCATGAATGTTCATTGTTCATCTATGCTGTTTGTTCATCTAACCTGTTCATTGTTCATTTGTTCATCGTGGCGTGTTCATTAGCGCGGTGTTCATCCATGCGGTGTTCATTGTTCATATGTTCATAGCTTCCCTATGTTCATTGTTCATCTTAATATGTTGTTCATAATGAACTTGACCAGAGTATGTTCATAGTTTCCAGAATGTTCATTCCCGTGTTCATTGTTCATTTTCTGATGTTCATTGTTCATTGTTCATTGTTCATAGGTGTTCATTCTGTTCATTGTTCATGCCCATGTTCATCTCCGATTGTTCATTGTTCATTGTTCATAGTGTTCATTGTTCATCTGTTCATGTGTTCATGAGATGCTGTTCATTCAGACTCGTGTTCATACACATACGATGTTCATTGTTCATACAATGTTCATCTGTTCATTCGCTGTTCATTCTGTTCATAAGTCCTAAGCATGTTCATATAATGTTCATCCTGTTCATCCCCCGTGTTCATTTGTTGTTCATCCGCATAGCGCCGGGTATGTTCATTGTTCATGGCATTTGTTCATGTGTTCATCTTCTGTTCATCGTGTTCATTGTTCATGTCTGTGTTCATGTGTTCATATCTGTGTTCATTGTTCATTCAGCCTGTTCATACTGTTCATACAGATGGAATGTTCATGTGTTCATATTTGATTGCTCGGGGATGTTCATTTGACCTGTTCATTTGTTCATACGTGTTCATCATAGTATTTCTGTTCATTGTTCATTGTTCATGTGTTCATTCTTTACGCTGTTCATTCGGTACTGATATGTTCATGTTCGCACTAACCCTGTTCATAACGTGTTCATTGTTCATCTTATGTTCATGGCCGGGTCCGGCATTGTTCATCGGCATGTTCATATGTTCATCGATTGCGGGTGTGTTCATAAGGATGTTCATTTCCAAAGAATGTTCATCTCTGTTCATGTGTTCATTGTTCATTGCTGTTCATGAGTTGTTCATATTGTTCATTGTTCATCGGCATGTATGTTCATATGTTCATTGTTCATAATGTTCATTGTTCATGATGTTCATCAGGGAAATGTTCATCTGTTCATTGTTCATAACTGTTCATTGTTCATTGTTCATTGTTCATTGTTCATAGTTGTTCATAAGCGCTGTTCATCATGTTCATTGTTCATCGGGTGTTCATATCGACTCACTTGTTCATTGTTCATATGTTCATACTGTTCATGCTGTTCATATATGTTCATAATTGTTCATGGGTGTTCATTGTTCATCATGTTCATATGTTCATTGTTCATATGTTCATCTGTTCATTGTTCATCGGGCCGAGGTGAATGTTCATTGTTCATTCATTGTTCATAACCAGCGTTGTTCATTTGTTCATGTGTTCATTGTTCATATTGTTCATTGTTCATTGTTCATGCCAATGTTCATATGATTTTTGTTCATGTGTTCATTGTTCATTGTTCATTTACACTGTTCATCCCCCTGTTCATCTGTTCATTAAGGCCACTTCATGTTCATGATGTTCATTGTTCATCTTCAGCTGATGTTCATTGTTCATCCATTTGTTCATGATCATGTTCATATTGTTCATAGTGATGCTGTTCATACAACTGTTCATGGAGTGTTCATTGCTGTTCATGTGTTCATCACTGTTCATCGTGTTTGTTCATATGTTCATTGTTCATGGTTTGTGTTCATTGTTCATATGTTCATTGTTCATCCCCAGCATGTTCATAATGTTCATCCCTGTTCATTGTTCATTGTTCATTCACAAATTCTGTTCATAGATGTTCATTGTTCATAGTGTTCATTGTTCATTGTTCATAGGATGTTCATCATGTTCATAATCATGTTCATTGTTCATTACATTGTTCATTGTTCATCCGTTCAGCCATTGTTCATTGTTGTTCATTGTTCATCTGTTCATTTTGTTTCTGTTCATCTCCCTGTTCATACTGCTGTTCATTATGTTCATGTTCGTGTATTTGTTCATTGTTCATTGTTCATTTCTGTTCATCCAGGTGTTCATGTGTTCATTGTTCATGTGTTCATCTGTTCATATGTTCATATGTTCATCTCTGTTCATTGTTCATTGTTCATGGCTGTTCATTGTTCATACTTGTTCATTTGTTGTTCATTGTTCATGGCATCATGTTCATGTGTTCATTGTGTTCATCCTGTTCATCTGTTCATACAGAATTGTTCAT"
# spacedPrint(findOccurrences(pattern_pm,text_pm))

### EXERCISE BREAK
# file = open("../data/Vibrio_cholerae.txt",'r')
# text_vc = file.read()
# pattern_vc = "CTTGATCAT"
# spacedPrint(findOccurrences(pattern_vc,text_vc))


################################################
############## CLUMP FINDING PROBLEM ###########

#finds all distinct k-mers forming (L,t)-clumps in genome. 
#A k-mer forms a (L,t)-clump if it appears at least t times in an interval of lenght L.   
def findClumps(genome, k, l, t):
    patterns = []
    for i in range(len(genome) - l + 1):
        window = genome[i:i+l]
        freqTable = frequencyTable(window,k)

        for pattern, frequency in freqTable.items():
            if frequency >= t and not (pattern in patterns):
                patterns.append(pattern)
    return patterns

# genome = "ATTTTTACCTTGCATAGGGAGATAAGAAAAGGCAAGAATAAAGGGGCACGATGCACGATATATGATCGATATCACGCTGTTTATCCTCGCCTAACTAAACCCCTCAGGCGCGGTGTTTGTTCACATTTGACGTGTGTCAGACCCTCACAAATGTACTTGGCTTATGGCTTATGGCTTATTGGCTTATTGGGACCAGTTTAGACACGCCTTCGCACTCCCAGTAACTACTGGTAGCGAAGGCAACCGCCCCGAACTGCGTCCTCCATAGTAGTATAGCGGAACCCATAACTGTCGTACCTACACAACGGTGCCAAGGGATCACCGTAGCCTGCCGAACCGGGTATATATGGGTCATGTATGTGAGCTACCCATTTGAACTCTTCTTTGGGTAACCGTGGCCGTCTTAGTTGGGCTGACTTTTCATATGACTCATAGTGATTGCACGTTTAGCGTGTTGGGGATAGATCCGGTAATGACCTCCAATGCTTAGTTGATCTCGCACATTTGGTTGCCTATGTAATGTGTTTCCCGACCGAACCGTGGCAATAACTTAGGGTCAAATGGAGACGACATTCCACGATCATGGTCATGCGCAGAGGTCGATAACGAACTGGACGAGGGTAGCGCAACCCACGTCCTCGCAATGGCAAGTACGATGCCGCGAAAACATGGGGCCAATCATGCATCTCGTCGATGGGCAGCGGCAGAGGGGGTCCTCTTTCTTAGGTTGTTCGGTCGGGGACTATGGTGCCTAGGACATCACATAAAAGTAAAGTAGCTGTTCCTGTCCCCCCGCGGTGCGGTCCCCCCGCGGTTTATGAATTTTTCAACCCCGAGTTGTACGTCCGTTAAGGAGCTGGCATCTTAGTGGGTTCAGAAACCGCCGTGTTTTTTCCGTGTTTGTTTCGCCTCGGTCGGTCCCGCGTGCACTGTGCGAGTGGATTTGCCATACAGAATTTTAGGTAGTCTCTATCATTATCTATCATCGTCGCGTGAATGGAAGCCCATGTTCCGTGGAATCGAGTTAGTTGGGATCGTGAGTAGCTGCTATCCCGAAAGACTATCTCTCACCGCCGCGTGAAGTTGCGAAGGCGCCCATGTCAGTAGCCGCAAAGAGAAACTAACAGTGTTTCCCCTTCTATGCGTACGTCCGAATCGGGCGGGATATGTGAACTCTAACACGATATTACCAGGGAGAGGCGATATCCTTATTCACTCGCGGGAGAAACACGTTACCGAGACCCCTAACCTGCGGAGTGCCTCCCTGGGCAGCCGAAATGGAGTCGTAAACCCGAACGTATTTGGGCATACTCGGTACCTTCGAAACGACGGGACGGAAACGACGGAAAAACTGGGGTTTCGAACCATCCGTCAACGATTCGGTCACACATCTCTAGGGCGCGGGAAGACATCATTTATGAGTATCGTAAGAAGCTAGAAGCTAGTAAAGCTAGTGTACAATTGGCTGTTGGTATTTTTCGCGCCCGTTGATACATGCGTCTTCCAGTGACGTGGTGAACCATTGTCTCGCAACTTCATGAGAAACCAGGTTTAAACGGGGATGCGTTTAATGCAATCCATGCTTTTTCTCGATGGGCACTCATAGGTGCGATCTTACTGAACATCTCGATTCCATTCCATGGATGTTCCATGGACGATTTTAGGGATGATGGGCCGCCGCCTCCGACCGACGCTCTGAGCTCGCTAATTGGTTCCCATCGATCGTTAGACACTCAATCTCATCTAAGCCTGAATGCTCCTATGTCAGATGGATGTATGTTTTTCGTCGTTCGATCGTTCGATCGTTCGATCGTTCGATCGTTCGATCGTTCGATCGTTCGATCGTTCGACGGACTCCCGGACTCCCGGACTCCCGGACTCCCGCGGACTCCGACCGGACTCC"
# spacedPrint(findClumps(genome, 8, 25, 4))


### EXERCISE BREAK
file = open("../data/E_coli.txt", 'r')
text_ec = file.read()
print(len(findClumps(text_ec,9,500,3)))
